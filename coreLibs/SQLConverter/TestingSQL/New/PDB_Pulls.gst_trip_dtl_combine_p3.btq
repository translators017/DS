#========================================================================
# Script Name:   bhk.gst_trip_dtl_combine_p3.new.btq
# Example(S):   
# Purpose:       BTEQ script to insert trips with no overlapping or 
#                adjacent trips after combines into key table
# Written:       06/21/2012
# Author:        LBM
# Modifications: 
#                06/16/2014 Pat A. Add a condition where not exists in the
#                                  key table to prevent duplicated data.
#========================================================================
. $CONFIGDIR/parseArg

# Check for valid arguments
REQUIRE_LOGON

bteq <<EOF
.RUN FILE $LOGONDIR/$LOGON;

/*********************************************************
    INSERT INTO KEY TABLE ALL NEW/UPDATED/RE-AGGREGATED
    RECORDS
**********************************************************/
locking ${PDBKEYDB}.gst_trip_dtl_key for access
insert into ${PDBKEYDB}.gst_trip_dtl_key 
(
 i_dmid
,c_prop_cd
,i_trip_id
,change_code
,key_sequence
,time_stamp
,d_timestamp
)
select
 i_dmid
,c_prop_cd
,i_trip_id
,'I'
,888888888
,current_timestamp(5)
,current_timestamp(0)
from ${WORKDB}.gst_trip_dtl_stage a
where not exists 
   (
       select *
       from 
       (
           select i_dmid
                 ,c_prop_cd
                 ,i_trip_id
                 ,d_start_dt
                 ,d_end_dt 
           from ${EDWDB}.gst_trip_dtl
           group by 1,2,3,4,5
           union all
           select i_dmid
                 ,c_prop_cd
                 ,i_trip_id
                 ,d_start_dt
                 ,d_end_dt 
           from ${ARCHIVEDB}.gst_trip_dtl
           group by 1,2,3,4,5
        ) b
        where a.i_dmid      = b.i_dmid
        and   a.c_prop_cd   = b.c_prop_cd
        and   a.d_start_dt  = b.d_start_dt
        and   a.d_end_dt    = b.d_end_dt
        and   a.i_trip_id   = b.i_trip_id
    )
and not exists
      (
        select *
        from ${PDBKEYDB}.gst_trip_dtl_key k
        where a.i_dmid      = k.i_dmid
        and   a.i_trip_id   = k.i_trip_id
      )

;


.IF ERRORCODE <> 0 THEN .QUIT ERRORCODE;
.QUIT; 

EOF

rc=$?
exit ${rc}